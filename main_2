#!/bin/bash

######################################################################
##              Set Up Script for Kali on Bootable USB               ##
######################################################################
# This is a set up script for setting up preferred aps on a USB which already has 
# basic Kalie installed - without persistence.

# to install:-
#   need to first install curl ==> apt install curl  # this is probably already on?
#   then
#   curl -k -s https://raw.githubusercontent.com/leighton-0/Kail_SetUp/main/main_2 | bash

s=5                  # Slows script down so you can see whats going on.

# will the persistence script below work in zsh (defalt kali shiell)
# assume you have to change shell --> add persistece --> reboot & cnange shell again




# make sure we're root
if [ "$HOME" != "/root" ]
then
    printf "Please run while logged in as root\n"
    exit 1
fi

printf '\n============================================================\n'
printf '[+] Updating System\n'
printf '============================================================\n\n'
apt update -y && apt upgrade -y
sleep $s


apt install wget -y
apt install ruby -y
apt install git -y
apt install tmux -y
git clone https://github.com/towry/tmux-config.git
./tmux-config/install.sh
apt install build-essential libcurl4-openssl-dev libxml2 libxml2-dev libxslt1-dev ruby-dev  libgmp-dev zlib1g-dev -y
sleep 5
apt install nmap -y
apt install whois -y
apt install dnsutils -y
apt install tree
apt install figlet toilet            # install figlet for banners

gem install wpscan -y                                                               #install wpscan
wget https://raw.githubusercontent.com/leighton-0/1_auto_wpscan/master/auto_wpscan.sh   #install auto_wpscan
# wget https://github.yanqishui.work/S1lkys/Auto_wpscan/raw/master/auto_wpscan.sh     #install auto_wpscan
wget https://raw.githubusercontent.com/S1lkys/Auto_wpscan/master/wp-links           #uploads trial wordpress list (70)
wget https://raw.githubusercontent.com/leighton-0/Passwords-Mine/main/password.txt  #upload my password list
apt install hydra -y                                                                #install Hydra
apt install whois -y
apt install dnsutils -y
apt install flatpak -y

printf '\n============================================================\n'
printf '[+]  Upload my standard .bash_aliases & upgrades to .bashrc. \n'
printf '============================================================\n\n'
sleep $s

if [ ! -f ~/.bashrc.bak ]; then                                                      # Check if bashrc.bak has already been copied. If yes then skip
    cp /root/.bashrc /root/.bashrc.bak                                               # bak Up bashrc incase I fuck it up

wget https://raw.githubusercontent.com/leighton-0/.dotfiles/main/.bash_aliases       # Upload my standard aliases file

cat <<"EOF" >>.bashrc                                                                #Add pointer to new .bash_aliases
if [ -f ~/.bash_aliases ]; then
. ~/.bash_aliases
fi
EOF
fi

. .bashrc && . .bash_aliases
# ===complete=========

wget https://raw.githubusercontent.com/FreedomBen/digall/main/digall && chmod +x digall
# installs an automated script for dig
# Ref:- https://github.com/FreedomBen/digall
# Use :- ./digall example.com
# ===complete========= To do - copy repo script to dotfiles

#   copy .bashrc with API keys from andy ssd
#   cp /media/a/AndySSD/3_Targets/.bashrc /.bashrc DELETE THIS LINE
cp /media/a/AndySSD/3_Targets/ReconFTW_config_files/.bashrc ~/.bashrc

# enable command aliasing
shopt -s expand_aliases

# source .bashrc & .bash_aliases
. .bashrc && . .bash_aliases                



printf '\n============================================================\n'
printf '[+] Installing:\n'
printf '     - wireless drivers\n'
printf '     - golang & environment\n'
printf '     - terminator\n'
printf '     - gedit\n'
printf '     - htop\n'
printf '     - mosh\n'
printf '     - tmux\n'
printf '     - NFS server\n'
printf '     - DNS Server\n'
printf '     - hcxtools (hashcat)\n'
printf '============================================================\n\n'
apt-get install \
    realtek-rtl88xxau-dkms \
    golang \
    terminator \
    gedit -y \
    python3-dev \
    python3-pip \
    net-tools \
    htop \
    mosh \
    tmux \
    nfs-kernel-server \
    dnsmasq \
    hcxtools \

python2 -m pip install pipenv
python3 -m pip install pipenv
apt-get remove mitmproxy
python3 -m pip install mitmproxy
# default tmux config
cat <<EOF > "$HOME/.tmux.conf"
set -g mouse on
set -g history-limit 50000
# set second prefix key to "CTRL + A"
set -g prefix2 C-a
bind C-a send-prefix -2
# List of plugins
set -g @plugin 'tmux-plugins/tmux-logging'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
EOF

printf '\n============================================================\n'
printf '[+]  Install nano text editor from binaries. \n'
printf '============================================================\n\n'
sleep $s

wget https://www.nano-editor.org/dist/v7/nano-7.2.tar.gz
tar -zxvf nano-7.2.tar.gz
cd nano-7.2
sudo apt install libncurses-dev
./configure
make
make install
# set up colour text ref:- https://askubuntu.com/questions/90013/how-do-i-enable-syntax-highlighting-in-nano
find /usr/share/nano/ -iname "*.nanorc" -exec echo include {} \; >> ~/.nanorc

printf '\n============================================================\n'
printf '[+]  Install docker \n'
print '[+] link --> https://docs.docker.com/engine/install/debian/#install-using-the-repository \n'
printf '============================================================\n\n'
sleep $s

# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

# install docker package
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Verify that the installation is successful by running the hello-world image:
docker run hello-world

printf '\n============================================================\n'
printf '[+]  Install golang 1.21.1 \n'
printf '============================================================\n\n'
sleep $s
# ref:- https://www.digitalocean.com/community/tutorials/how-to-install-go-on-debian-10
curl -O https://dl.google.com/go/go1.21.1.linux-amd64.tar.gz
tar xvf go1.21.1.linux-amd64.tar.gz
chown -R root:root ./go
mv go /usr/local
echo "export GOPATH=$HOME/work" >> ~/.profile
echo "export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin" >> ~/.profile
source ~/.profile

<< 'MULTILINE-COMMENT'
printf '\n============================================================\n'
    printf '[+] install NordVPN\n'
    printf '============================================================\n\n'
wget https://raw.githubusercontent.com/leighton-0/kali-setup/master/nordvpn-release_1.0.0_all.deb
apt-get install -y ./nordvpn-release_1.0.0_all.deb
apt-get update
apt-get install nordvpn
sleep $s
MULTILINE-COMMENT

printf '\n============================================================\n'
printf '[+] install NordVPN\n'
printf '============================================================\n\n'
if [ ! -f '~/nordvpn*']
then
wget https://repo.nordvpn.com/deb/nordvpn/debian/pool/main/nordvpn-release_1.0.0_all.deb
apt install -y ./nordvpn-release_1.0.0_all.deb
fi
apt update
apt install nordvpn

# # COMMENT STARTS ===================THIS SECTION ISN'T WORKING
# if (1 == 0); then
#
# nordvpn login --username leig@clucas.eu --password iloveanna
# sleep 5
# #nordvpn connect "#656"
# #nordvpn -c -n "United States #3710"
# nordvpn connect --group Dedicated_IP Germany
# sleep 10
# nordvpn status

<< 'MULTILINE-COMMENT'
if [ ! -d ~/reconftw ]; then    #Check it Reconftw already exists. If no then loads reconftw program

    printf '\n============================================================\n'
    printf '\n[+] reconftw doesnt exists installing reconftw\n'
    printf '============================================================\n\n'

    sleep $s
    git clone https://github.com/six2dez/reconftw
    cd reconftw/
    ./install.sh
else

  printf '\n============================================================\n'
  printf '\n[+] reconftw already exists\n'
  printf '============================================================\n\n'

fi
sleep $s

  printf '\n============================================================\n'
  printf '\n[+] install bbot \n'
   printf '\n[+] reference https://github.com/blacklanternsecurity/bbot \n'
  printf '============================================================\n\n'

pip install bbot
# the API keys for this needs obtaining and writing to .bashrc file

<<comment
printf '\n============================================================\n'
printf '\n[+] upload custom reconftw.cfg and amass config.ini files\n'
printf '============================================================\n\n'

sleep $s
rm -r ~/reconftw/reconftw.cfg 2> /dev/null
wget -P ~/reconftw https://raw.githubusercontent.com/leighton-0/DigitalOcean-ReconFTW-Set-Up/main/reconftw.cfg
rm -r ~/.config/amass/config.ini 2> /dev/null
wget -P ~/.config/amass/ https://raw.githubusercontent.com/leighton-0/DigitalOcean-ReconFTW-Set-Up/main/config.ini
sleep $s
comment
MULTILINE-COMMENT

 printf '\n============================================================\n'
    printf '[+] Auto MAC spoof on start up - assuming wlan0\n'
    printf '============================================================\n\n'
 #touch /etc/systemd/system/changemac@.service
wget -P /etc/systemd/system https://raw.githubusercontent.com/leighton-0/kali-setup/master/changemac@.service
systemctl enable changemac@wlan0.service
sleep $s
 printf '\n============================================================\n'
    printf '[+] Auto Random Host name\n'
    printf '============================================================\n\n'
git clone https://github.com/tasooshi/namechanger.git
cd namechanger
make install
sleep $s

  
   printf '\n============================================================\n'
    printf '[+] change config file for terminator to 3 pane set up \n'
    printf '============================================================\n\n'
rm -r .config/terminator/config
wget -P '.config/terminator/' https://raw.githubusercontent.com/leighton-0/5_Terminator_config/main/main
#curl -k -s https://raw.githubusercontent.com/leighton-0/kali-setup/master/kali-setup-script.sh | bash
sleep $s

<<comment
not used as the API keys are entered directly into the .bashrc file

   printf '\n============================================================\n'
    printf '[+] change config file reconFTW to API keys entered \n'
    printf '============================================================\n\n'

cp /media/a/AndySSD/3_Targets/ReconFTW_config_files/reconftw.cfg ~/reconftw

comment



